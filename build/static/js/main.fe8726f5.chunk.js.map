{"version":3,"sources":["components/SocketContext.js","components/StartRound.js","components/Emojis.js","components/Sounds.js","components/GameContext.js","components/Answers.js","components/ModalWinner.js","components/LifeBar.js","serviceWorker.js","index.js","App.js","img/vs.png","sounds/Trilha-1.mp3","sounds/Trilha-2.mp3","sounds/Trilha-3.mp3","sounds/Trilha-4.mp3","sounds/Trilha-5.mp3","sounds/Trilha-6.mp3","sounds/Trilha-7.mp3","sounds/Trilha-8.mp3","sounds/Trilha-9.mp3","sounds/Trilha-10.mp3","sounds/Trilha-11.mp3","sounds/Trilha-12.mp3","sounds/tada.mp3","img/victory.gif"],"names":["SocketContext","React","createContext","StartRound","socket","useContext","Container","Row","className","Col","xs","lg","Button","variant","size","onClick","emit","emojis","Sounds","useState","trilha1","audioTrilha","setAudioTrilha","useEffect","min","max","Math","ceil","floor","random","trilha2","trilha3","trilha4","trilha5","trilha6","trilha7","trilha8","trilha9","trilha10","trilha11","trilha12","src","volume","loop","autoPlay","GameContext","Answers","gameSettings","url_emoji","emoji","Emojis","nextQuestion","answerStreamer","question","isActive","Provider","value","title","totalVotes","Table","striped","bordered","hover","answers","width","alt","text","votes","toFixed","ModalWinner","showModal","setShowModal","correctAnswer","setCorrectAnswer","icon","faTimes","color","iconResultChat","setIconResultChat","iconResultStreamer","setIconResultStreamer","isPopup","oldQuestion","forEach","answer","isCorrect","console","log","isStreamerWinner","faCheckCircle","isChatWinner","Modal","show","onHide","animation","aria-labelledby","centered","Header","closeButton","Title","id","round","Body","vsImg","tada","LifeBar","fluid","ProgressBar","style","height","now","lifeBar","LIFE_STREAMER","lifeStreamer","key","lifeChat","LIFE_CHAT","winner","Boolean","window","location","hostname","match","ReactDOM","render","setSocket","setGameSettings","isReady","setIsReady","youtubeOff","setYoutubeOff","idLive","pathname","split","url","includes","protocol","Date","socketIOClient","on","victory","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.fe8726f5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SocketContext = React.createContext();\n\nexport default SocketContext;\n","import React, { useContext } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport SocketContext from \"./SocketContext\";\n\n//import GameContext from \"./GameContext.js\";\n\nexport default function StartRound() {\n  //const gameSettings = useContext(GameContext);\n  const socket = useContext(SocketContext);\n\n  function startRound() {\n    socket.emit(\"nextRound\");\n  }\n  return (\n    <div>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs lg=\"12\" className=\"text-center\">\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <Button variant=\"success\" size=\"lg\" onClick={startRound}>\n              Iniciar rodada\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","// images.js\nlet emojis = {\n  \"👽\": \"alien.svg\",\n  \"🤡\": \"clown_face.svg\",\n  \"👑\": \"crown.svg\",\n  \"👻\": \"ghost.svg\",\n  \"🍇\": \"grapes.svg\",\n  \"🍔\": \"hamburguer.svg\",\n  \"💋\": \"kiss.svg\",\n  \"👌\": \"ok_hand.svg\",\n  \"💩\": \"pile_of_poo.svg\",\n  \"🍍\": \"pineapple.svg\",\n  \"🍗\": \"poutlry_leg.svg\",\n  \"❤️\": \"red_heart.svg\",\n  \"💍\": \"ring.svg\",\n  \"🤖\": \"robot_face.svg\",\n  \"💀\": \"skull.svg\",\n  \"😍\": \"smiling_face_with_heart_eyes.svg\",\n  \"😎\": \"smiling_face_with_sunglasses.svg\",\n  \"🍓\": \"strawberry.svg\",\n  \"👍\": \"thumbs_up.svg\",\n  \"🍉\": \"watermelon.svg\"\n};\n\nexport default emojis;\n","import React, { useEffect, useState } from \"react\";\nimport trilha1 from \"./../sounds/Trilha-1.mp3\";\nimport trilha2 from \"./../sounds/Trilha-2.mp3\";\nimport trilha3 from \"./../sounds/Trilha-3.mp3\";\nimport trilha4 from \"./../sounds/Trilha-4.mp3\";\nimport trilha5 from \"./../sounds/Trilha-5.mp3\";\nimport trilha6 from \"./../sounds/Trilha-6.mp3\";\nimport trilha7 from \"./../sounds/Trilha-7.mp3\";\nimport trilha8 from \"./../sounds/Trilha-8.mp3\";\nimport trilha9 from \"./../sounds/Trilha-9.mp3\";\nimport trilha10 from \"./../sounds/Trilha-10.mp3\";\nimport trilha11 from \"./../sounds/Trilha-11.mp3\";\nimport trilha12 from \"./../sounds/Trilha-12.mp3\";\n\nexport default function Sounds() {\n  const [audioTrilha, setAudioTrilha] = useState(trilha1);\n  function getRandomInt(min, max) {\n    //console.log(min,max);\n    if (Math.ceil(min) === Math.floor(max)) {\n      return min;\n    } else {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  }\n  useEffect(() => {\n    let randomTrilha = getRandomInt(1, 4);\n    switch (randomTrilha) {\n      case 1:\n        setAudioTrilha(trilha1);\n        break;\n      case 2:\n        setAudioTrilha(trilha2);\n        break;\n      case 3:\n        setAudioTrilha(trilha3);\n        break;\n      case 4:\n        setAudioTrilha(trilha4);\n        break;\n      case 5:\n        setAudioTrilha(trilha5);\n        break;\n      case 6:\n        setAudioTrilha(trilha6);\n        break;\n      case 7:\n        setAudioTrilha(trilha7);\n        break;\n      case 8:\n        setAudioTrilha(trilha8);\n        break;\n      case 9:\n        setAudioTrilha(trilha9);\n        break;\n      case 10:\n        setAudioTrilha(trilha10);\n        break;\n      case 11:\n        setAudioTrilha(trilha11);\n        break;\n      case 12:\n        setAudioTrilha(trilha12);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n  return <audio src={audioTrilha} volume=\"0.8\" loop autoPlay />;\n}\n","import React from \"react\";\n\nconst GameContext = React.createContext();\n\nexport default GameContext;\n","import React, { useEffect, useContext } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport StartRound from \"./StartRound.js\";\nimport { Table, Container, Row, Button } from \"react-bootstrap\";\nimport SocketContext from \"./SocketContext\";\nimport Emojis from \"./Emojis\";\nimport Sounds from \"./Sounds\";\n\nimport GameContext from \"./GameContext.js\";\n\nexport default function Answers() {\n  const gameSettings = useContext(GameContext);\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {}, [gameSettings]);\n\n  function url_emoji(emoji) {\n    let img = \"img/emojis/\" + Emojis[emoji];\n    return img;\n  }\n  function nextQuestion(answerStreamer) {\n    // console.log(\"PQQQQQ\", answerStreamer);\n    socket.emit(\"nextQuestion\", answerStreamer);\n  }\n\n  if (gameSettings.question.isActive) {\n    return (\n      <div>\n        <GameContext.Provider value={gameSettings}>\n          <Container>\n            <Sounds />\n            <Row className=\"justify-content-md-center\">\n              <h2>\n                {gameSettings.question.title} (\n                {gameSettings.question.totalVotes})\n              </h2>\n            </Row>\n            <br />\n            <br />\n            <Row className=\"justify-content-md-center\">\n              <Table striped bordered hover variant=\"dark\">\n                <tbody>\n                  <tr>\n                    <td className=\"text-center align-middle\">\n                      <Button\n                        variant=\"outline-primary\"\n                        size=\"lg\"\n                        onClick={() => nextQuestion(0)}\n                      >\n                        <img\n                          src={url_emoji(\n                            gameSettings.question.answers[0].emoji\n                          )}\n                          width=\"45vw\"\n                          alt=\"img1\"\n                        />\n                      </Button>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>{gameSettings.question.answers[0].text}</h4>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>\n                        {gameSettings.question.answers[0].votes > 0\n                          ? (\n                              (gameSettings.question.answers[0].votes * 100) /\n                              gameSettings.question.totalVotes\n                            ).toFixed(1)\n                          : 0}\n                        %\n                      </h4>\n                    </td>\n                    <td className=\"text-center align-middle\">\n                      <Button\n                        variant=\"outline-warning\"\n                        size=\"lg\"\n                        onClick={() => nextQuestion(1)}\n                      >\n                        <img\n                          src={url_emoji(\n                            gameSettings.question.answers[1].emoji\n                          )}\n                          width=\"45vw\"\n                          alt=\"img1\"\n                        />\n                      </Button>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>{gameSettings.question.answers[1].text}</h4>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>\n                        {gameSettings.question.answers[1].votes > 0\n                          ? (\n                              (gameSettings.question.answers[1].votes * 100) /\n                              gameSettings.question.totalVotes\n                            ).toFixed(1)\n                          : 0}\n                        %\n                      </h4>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"text-center align-middle\">\n                      <Button\n                        variant=\"outline-success\"\n                        size=\"lg\"\n                        onClick={() => nextQuestion(2)}\n                      >\n                        <img\n                          src={url_emoji(\n                            gameSettings.question.answers[2].emoji\n                          )}\n                          width=\"45vw\"\n                          alt=\"img1\"\n                        />\n                      </Button>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>{gameSettings.question.answers[2].text}</h4>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>\n                        {gameSettings.question.answers[2].votes > 0\n                          ? (\n                              (gameSettings.question.answers[2].votes * 100) /\n                              gameSettings.question.totalVotes\n                            ).toFixed(1)\n                          : 0}\n                        %\n                      </h4>\n                    </td>\n                    <td className=\"text-center align-middle\">\n                      <Button\n                        variant=\"outline-danger\"\n                        size=\"lg\"\n                        onClick={() => nextQuestion(3)}\n                      >\n                        <img\n                          src={url_emoji(\n                            gameSettings.question.answers[3].emoji\n                          )}\n                          width=\"45vw\"\n                          alt=\"img1\"\n                        />\n                      </Button>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>{gameSettings.question.answers[3].text}</h4>\n                    </td>\n                    <td className=\"text-left align-middle\">\n                      <h4>\n                        {gameSettings.question.answers[3].votes > 0\n                          ? (\n                              (gameSettings.question.answers[3].votes * 100) /\n                              gameSettings.question.totalVotes\n                            ).toFixed(1)\n                          : 0}\n                        %\n                      </h4>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Row>\n            <br />\n            <br />\n          </Container>\n        </GameContext.Provider>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <StartRound gameSettings={gameSettings} />\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Modal, Row, Container, Col } from \"react-bootstrap\";\nimport GameContext from \"./GameContext.js\";\nimport vsImg from \"./../img/vs.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport tada from \"./../sounds/tada.mp3\";\n\nexport default function ModalWinner() {\n  // constructor(props) {\n  //   super(props);\n  //    = {\n  //     gameSettings: .propsgameSettings,\n  //     showModal: false,\n  //     buttonDisabled: true\n  //   };\n  //   .close = .close.bind();\n  //   .open = .open.bind();\n  //   .nextRound = .nextRound.bind();\n  //   .whoIsWinner = .whoIsWinner.bind();\n  // }\n  const gameSettings = useContext(GameContext);\n  // const socket = useContext(SocketContext);\n  const [showModal, setShowModal] = useState(false);\n  const [correctAnswer, setCorrectAnswer] = useState(false);\n  const [iconResultChat, setIconResultChat] = useState(\n    <FontAwesomeIcon icon={faTimes} color=\"red\" size=\"9x\" />\n  );\n  const [iconResultStreamer, setIconResultStreamer] = useState(\n    <FontAwesomeIcon icon={faTimes} color=\"red\" size=\"9x\" />\n  );\n\n  useEffect(() => {\n    // console.log(gameSettings);\n    if (gameSettings.isPopup) {\n      open();\n    }\n    gameSettings.oldQuestion.answers.forEach(answer => {\n      if (answer.isCorrect) {\n        setCorrectAnswer(answer.text);\n      }\n    });\n    console.log(gameSettings.oldQuestion);\n    if (gameSettings.oldQuestion.isStreamerWinner) {\n      // console.log(\"Streamer Winner\");\n      setIconResultStreamer(\n        <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size=\"9x\" />\n      );\n    } else {\n      // console.log(\"Streamer Loser\");\n      setIconResultStreamer(\n        <FontAwesomeIcon icon={faTimes} color=\"red\" size=\"9x\" />\n      );\n    }\n    if (gameSettings.oldQuestion.isChatWinner) {\n      // console.log(\"Chat Winner\");\n      setIconResultChat(\n        <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size=\"9x\" />\n      );\n    } else {\n      // console.log(\"Chat Loser\");\n      setIconResultChat(\n        <FontAwesomeIcon icon={faTimes} color=\"red\" size=\"9x\" />\n      );\n    }\n  }, [gameSettings]);\n\n  function close() {\n    setShowModal(false);\n  }\n\n  function open() {\n    setShowModal(true);\n  }\n\n  return (\n    <div>\n      {/* <Button variant=\"outline-primary\" onClick={open}>\n        RESULTADO\n      </Button> */}\n      <Modal\n        show={showModal}\n        onHide={close}\n        animation={false}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"text-center\">\n              Resultado da rodada {gameSettings.round - 1}\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <h6>{gameSettings.oldQuestion.title}</h6>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <h4>Resposta: {correctAnswer}</h4>\n            </Row>\n            <br />\n            <br />\n            <Row className=\"justify-content-md-center\">\n              <Col xs lg=\"4\" className=\"text-center\">\n                <h3>Streamer</h3>\n                <br />\n                {iconResultStreamer}\n                <br />\n                <br />\n              </Col>\n              <Col xs lg=\"4\" className=\"text-center\">\n                <br />\n                <br />\n                <img src={vsImg} width=\"130vw\" alt=\"VS\" />\n              </Col>\n              <Col xs lg=\"4\" className=\"text-center\">\n                <h3>Chat</h3>\n                <br />\n                {iconResultChat}\n                <br />\n                <br />\n              </Col>\n            </Row>\n          </Container>\n          <audio src={tada} volume=\"0.8\" autoPlay />\n        </Modal.Body>\n        {/* <Modal.Footer>\n          <Button variant=\"success\" onClick={close}>\n            Próxima Rodada\n          </Button>\n        </Modal.Footer> */}\n      </Modal>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport GameContext from \"./GameContext.js\";\nimport vsImg from \"./../img/vs.png\";\nimport { ProgressBar, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function LifeBar() {\n  const gameSettings = useContext(GameContext);\n\n  function round() {\n    if (gameSettings.winner) {\n      return \"FINAL\";\n    } else {\n      return \"Round \" + gameSettings.round;\n    }\n  }\n  if (gameSettings) {\n    // console.log(\"gameSettings\", gameSettings.lifeBar);\n    return (\n      <div>\n        <br />\n        <Container fluid>\n          <Row>\n            <Col xs lg=\"5\">\n              <ProgressBar style={{ height: 30 + \"px\" }}>\n                <ProgressBar\n                  variant=\"danger\"\n                  now={\n                    gameSettings.lifeBar.LIFE_STREAMER -\n                    gameSettings.lifeBar.lifeStreamer\n                  }\n                  key={1}\n                />\n                <ProgressBar\n                  variant=\"warning\"\n                  now={gameSettings.lifeBar.lifeStreamer}\n                  key={2}\n                />\n              </ProgressBar>\n            </Col>\n            <Col xs lg=\"2\">\n              <img src={vsImg} width=\"45vw\" alt=\"VS\" />\n            </Col>\n            <Col xs lg=\"5\">\n              <ProgressBar style={{ height: 30 + \"px\" }}>\n                <ProgressBar\n                  variant=\"warning\"\n                  now={gameSettings.lifeBar.lifeChat}\n                  key={1}\n                />\n                <ProgressBar\n                  variant=\"danger\"\n                  now={\n                    gameSettings.lifeBar.LIFE_CHAT -\n                    gameSettings.lifeBar.lifeChat\n                  }\n                  key={2}\n                />\n              </ProgressBar>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs lg=\"2\" className=\"text-left\">\n              <h4>Streamer</h4>\n            </Col>\n            <Col xs lg=\"3\" className=\"text-right\"></Col>\n            <Col xs lg=\"2\" className=\"text-center\">\n              <h4>{round()}</h4>\n            </Col>\n            <Col xs lg=\"3\" className=\"text-left\"></Col>\n            <Col xs lg=\"2\" className=\"text-right\">\n              <h4>Chat</h4>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  } else {\n    return \"Alow\";\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Media from \"./components/Media.js\";\nimport Answers from \"./components/Answers.js\";\nimport ModalWinner from \"./components/ModalWinner.js\";\nimport socketIOClient from \"socket.io-client\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport SocketContext from \"./components/SocketContext.js\";\nimport GameContext from \"./components/GameContext.js\";\nimport LifeBar from \"./components/LifeBar.js\";\nimport victory from \"./img/victory.gif\";\n\nexport default function App() {\n  const [socket, setSocket] = useState(null);\n  const [gameSettings, setGameSettings] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [youtubeOff, setYoutubeOff] = useState(false);\n\n  useEffect(() => {\n    let idLive = window.location.pathname.split(\"/\")[1];\n    console.log(window.location);\n    let url = \"https://localhost:21211?idLive=\" + idLive;\n    // let url = \"https://multistreamer.xyz:21211?idLive=\" + idLive;\n    if (window.location.hostname.includes(\"mrguinas\")) {\n      url =\n        window.location.protocol +\n        \"//multistreamer.xyz\" +\n        \":21211?idLive=\" +\n        idLive +\n        \"&now=\" +\n        Date.now();\n    }\n    // url = \"https://localhost:21211?idLive=\" + idLive;\n    console.log(url);\n    const socket = socketIOClient(url);\n    // const socket = socketIOClient(\n    //   window.location.protocol +\n    //     window.location.hostname +\n    //     \":21211!?idLive=\" +\n    //     idLive\n    // );\n    setYoutubeOff(true);\n    setSocket(socket);\n    socket.on(\"gameSettings\", gameSettings => {\n      console.log(gameSettings);\n      setGameSettings(gameSettings);\n      setIsReady(true);\n    });\n    socket.on(\"youtubeOff\", () => {\n      setYoutubeOff(true);\n      setIsReady(false);\n    });\n  }, []);\n\n  function notWorking() {\n    if (youtubeOff) {\n      return \"Utilize http://\" + window.location.hostname + \"/IDLIVEYOUTUBE\";\n    } else {\n      return \"Carregando...\";\n    }\n  }\n  function winner() {\n    return \"O \" + gameSettings.winner + \" VENCEU\";\n  }\n\n  if (isReady) {\n    if (gameSettings.winner) {\n      return (\n        <div className=\"App\">\n          <GameContext.Provider value={gameSettings}>\n            <SocketContext.Provider value={socket}>\n              <LifeBar gameSettings={gameSettings} />\n              <br />\n              <br />\n              <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                  <Col>\n                    <img src={victory} width=\"500vw\" alt=\"VS\" />\n                  </Col>\n                </Row>\n                <br />\n                <Row className=\"justify-content-md-center\">\n                  <Col>\n                    <h1>\n                      <b>{winner()}</b>\n                    </h1>\n                  </Col>\n                </Row>\n              </Container>\n              <ModalWinner />\n            </SocketContext.Provider>\n          </GameContext.Provider>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <GameContext.Provider value={gameSettings}>\n            <SocketContext.Provider value={socket}>\n              <LifeBar gameSettings={gameSettings} />\n              <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                  {/* <Col>\n                    <Media />\n                  </Col> */}\n                </Row>\n                <br />\n                <br />\n                <Row className=\"justify-content-md-center\">\n                  <Col>\n                    <Answers />\n                  </Col>\n                </Row>\n              </Container>\n              <ModalWinner />\n            </SocketContext.Provider>\n          </GameContext.Provider>\n        </div>\n      );\n    }\n  } else {\n    return <div>{notWorking()}</div>;\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/vs.2433496f.png\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-1.af2ae102.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-2.82d47fb0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-3.64ea50fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-4.cb861d4d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-5.a7739504.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-6.04747f10.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-7.0f4ea0a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-8.2351b5e2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-9.4a4f8bc1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-10.d9e6455c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-11.9623a6ac.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Trilha-12.b1366f42.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tada.7741f5d9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/victory.59d065af.gif\";"],"sourceRoot":""}